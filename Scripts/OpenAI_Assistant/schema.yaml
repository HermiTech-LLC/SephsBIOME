openapi: 3.0.0
info:
  title: SEPHSbiome Development Assistant API
  version: 2.0.0
servers:
  - url: http://localhost:5000
    description: Local Development Server
paths:
  /api/v1/github/dispatch-workflow:
    post:
      operationId: dispatchGithubWorkflow
      summary: Triggers a GitHub Actions workflow.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workflow:
                  type: string
                  description: The name of the workflow file to dispatch.
                  example: 'main.yml'
      responses:
        '200':
          description: Workflow dispatched successfully.
        '500':
          description: Failed to dispatch workflow.

  /api/v1/vscode/command:
    post:
      operationId: executeVscodeCommand
      summary: Executes a Visual Studio Code command.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: The VSCode command to execute.
                  example: 'extension.install'
      responses:
        '200':
          description: VSCode command executed successfully.
        '500':
          description: Failed to execute VSCode command.

  /api/v1/sentry/issues:
    get:
      operationId: getSentryIssues
      summary: Retrieves a list of issues from Sentry.
      responses:
        '200':
          description: List of Sentry issues.
        '500':
          description: Failed to retrieve Sentry issues.

  /api/v1/sqlite/query:
    post:
      operationId: executeSqliteQuery
      summary: Executes a query against the SQLite database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The SQLite query to execute.
                  example: 'SELECT * FROM simulation_results'
      responses:
        '200':
          description: Query executed successfully, results returned.
        '500':
          description: Error executing query.

  /api/v1/docker/run-container:
    post:
      operationId: runDockerContainer
      summary: Runs a Docker container with the specified image and command.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: The Docker image to run.
                  example: 'python:3.8-slim'
                command:
                  type: string
                  description: The command to run inside the container.
                  example: 'python script.py'
      responses:
        '200':
          description: Docker container ran successfully.
        '500':
          description: Failed to run Docker container.
  /api/v1/webhooks/github:
    post:
      operationId: handleGithubWebhook
      summary: Handle GitHub webhook.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  description: The GitHub event type.
                payload:
                  type: object
                  description: The payload of the webhook.
      responses:
        '200':
          description: Webhook processed successfully.
        '400':
          description: Invalid request or payload.

  /api/v1/ci/run-pipeline:
    post:
      operationId: runPipeline
      summary: Trigger CI/CD pipeline.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pipeline:
                  type: string
                  description: The name of the pipeline to run.
      responses:
        '200':
          description: Pipeline triggered successfully.
        '400':
          description: Invalid pipeline name.

  /api/v1/logs:
    get:
      operationId: getLogs
      summary: Fetch log data.
      parameters:
        - in: query
          name: level
          schema:
            type: string
          description: The log level to filter by.
      responses:
        '200':
          description: Log data returned.
        '400':
          description: Invalid log level.

  /api/v1/auth/login:
    post:
      operationId: loginUser
      summary: User login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user's username.
                password:
                  type: string
                  description: The user's password.
      responses:
        '200':
          description: Login successful, token returned.
        '401':
          description: Unauthorized, invalid credentials.

  /api/v1/cache/clear:
    post:
      operationId: clearCache
      summary: Clear cache.
      responses:
        '200':
          description: Cache cleared successfully.

  /api/v1/tests/run:
    post:
      operationId: runTests
      summary: Run automated tests.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                suite:
                  type: string
                  description: The test suite to run.
      responses:
        '200':
          description: Tests executed successfully.
        '400':
          description: Invalid test suite.

  /api/v1/sephsbiome/simulation:
    post:
      operationId: runSimulation
      summary: Start a simulation process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                population_size:
                  type: integer
                  description: Size of the population in the simulation.
                seq_length:
                  type: integer
                  description: Length of the sequence.
                d_model:
                  type: integer
                  description: Model dimension.
                generations:
                  type: integer
                  description: Number of generations for the simulation.
      responses:
        '200':
          description: Simulation started successfully.

  /api/v1/sephsbiome/visualization:
    get:
      operationId: getVisualization
      summary: Get data visualization.
      responses:
        '200':
          description: Visualization data returned.

  /api/v1/sephsbiome/genetic-algorithm:
    post:
      operationId: runGeneticAlgorithm
      summary: Update and run the genetic algorithm.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                population_size:
                  type: integer
                  description: Size of the population in the genetic algorithm.
                seq_length:
                  type: integer
                  description: Length of the sequence.
                d_model:
                  type: integer
                  description: Model dimension.
                generations:
                  type: integer
                  description: Number of generations for the genetic algorithm.
      responses:
        '200':
          description: Genetic algorithm executed successfully.
