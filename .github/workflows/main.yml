name: SephsBiome_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  ROS_DISTRO: noetic
  PYTHON_VERSION: 3.8

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container: 
      image: ros:${{ env.ROS_DISTRO }}-ros-core

    steps:
    - uses: actions/checkout@v2

    - name: Cache ROS dependencies
      uses: actions/cache@v2
      with:
        path: /opt/ros/${{ env.ROS_DISTRO }}
        key: ${{ runner.os }}-ros-${{ hashFiles('**/package.xml') }}

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Provide execute permission to the setup script
      run: chmod +x ./setup_sephsbiome.sh

    - name: Execute the setup script
      run: ./setup_sephsbiome.sh

    - name: Initialize ROS environment
      run: |
        sudo rosdep init
        rosdep update

    - name: Find ROS package directory
      id: find-ros-package
      run: |
        PACKAGE_DIR=$(dirname $(find . -name "package.xml" | head -n 1))
        echo "ROS package directory: $PACKAGE_DIR"
        echo "::set-output name=package-dir::$PACKAGE_DIR"

    - name: Create ROS workspace
      run: |
        mkdir -p ~/ros_ws/src
        cp -r ${{ steps.find-ros-package.outputs.package-dir }} ~/ros_ws/src
        cd ~/ros_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        rosdep install --from-paths src --ignore-src -r -y
        catkin_make

    - name: Run Unit Tests
      run: |
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        source ~/ros_ws/devel/setup.bash
        cd ~/ros_ws
        catkin_make run_tests
        catkin_test_results

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 ${{ steps.find-ros-package.outputs.package-dir }} --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 ${{ steps.find-ros-package.outputs.package-dir }} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-results
        path: ~/ros_ws/build/test_results/

    - name: Send Failure Notification
      if: failure()
      uses: some-notification-action@v1
      with:
        message: 'CI Workflow failed'
        # Additional notification parameters